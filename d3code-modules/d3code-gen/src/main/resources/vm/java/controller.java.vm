package ${packageName}.controller;

import java.util.List;

import lombok.RequiredArgsConstructor;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.validation.constraints.*;
import cn.dev33.satoken.annotation.SaCheckPermission;
import org.springframework.web.bind.annotation.*;
import org.springframework.validation.annotation.Validated;
import annotation.com.alphay.boot.common.idempotent.RepeatSubmit;
import com.alphay.boot.common.log.annotation.Log;
import com.alphay.boot.common.web.core.BaseController;
import com.alphay.boot.common.core.domain.R;
import com.alphay.boot.common.core.validate.AddGroup;
import com.alphay.boot.common.core.validate.EditGroup;
import com.alphay.boot.common.log.enums.BusinessType;
import com.alphay.boot.common.excel.utils.ExcelUtil;
import ${packageName}.domain.vo.${ClassName}Vo;
import ${packageName}.domain.bo.${ClassName}Bo;
import ${packageName}.domain.param.${ClassName}QueryParam;
import ${packageName}.service.I${ClassName}Service;
#if($table.crud)
#elseif($table.tree)
#end

/**
 * ${functionName}
 * 前端访问路由地址为:/${moduleName}/${businessName}
 *
 * @author Nottyjay
 * @since 1.0.0
 * @date ${datetime}
 */
@Validated
@RequiredArgsConstructor
@RestController
@RequestMapping("/${businessName}")
public class ${ClassName}Controller extends BaseController {

  private final I${ClassName}Service ${className}Service;

  /**
   * 查询${functionName}列表
   */
  @SaCheckPermission("${permissionPrefix}:list")
  @GetMapping("/list")
#if($table.crud)
  public PageResult<${ClassName}Vo> list(${ClassName}QueryParam param) {
    return ${className}Service.queryPageList(param);
  }
#elseif($table.tree)
  public R<List<${ClassName}Vo>> list(${ClassName}QueryParam param) {
    List<${ClassName}Vo> list = ${className}Service.queryList(param);
    return R.ok(list);
  }
#end

  /**
   * 导出${functionName}列表
   */
  @SaCheckPermission("${permissionPrefix}:export")
  @Log(title = "${functionName}", businessType = BusinessType.EXPORT)
  @PostMapping("/export")
  public void export(${ClassName}QueryParam param, HttpServletResponse response) {
    List<${ClassName}Vo> list = ${className}Service.queryList(param);
    ExcelUtil.exportExcel(list, "${functionName}", ${ClassName}Vo.class, response);
  }

  /**
   * 获取${functionName}详细信息
   *
   * @param ${pkColumn.javaField} 主键
   */
  @SaCheckPermission("${permissionPrefix}:query")
  @GetMapping("/{${pkColumn.javaField}}")
  public R<${ClassName}Vo> getInfo(@NotNull(message = "主键不能为空")
                   @PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}) {
    return R.ok(${className}Service.getVoById(${pkColumn.javaField}));
  }

  /**
   * 新增${functionName}
   */
  @SaCheckPermission("${permissionPrefix}:add")
  @Log(title = "${functionName}", businessType = BusinessType.INSERT)
  @RepeatSubmit()
  @PostMapping()
  public R<Void> add(@Validated(AddGroup.class) @RequestBody ${ClassName}Bo bo) {
    return toAjax(${className}Service.insertByBo(bo));
  }

  /**
   * 修改${functionName}
   */
  @SaCheckPermission("${permissionPrefix}:edit")
  @Log(title = "${functionName}", businessType = BusinessType.UPDATE)
  @RepeatSubmit()
  @PutMapping()
  public R<Void> edit(@Validated(EditGroup.class) @RequestBody ${ClassName}Bo bo) {
    return toAjax(${className}Service.updateByBo(bo));
  }

  /**
   * 删除${functionName}
   *
   * @param ${pkColumn.javaField}s 主键串
   */
  @SaCheckPermission("${permissionPrefix}:remove")
  @Log(title = "${functionName}", businessType = BusinessType.DELETE)
  @DeleteMapping("/{${pkColumn.javaField}s}")
  public R<Void> remove(@NotEmpty(message = "主键不能为空")
              @PathVariable("${pkColumn.javaField}s") ${pkColumn.javaType}[] ${pkColumn.javaField}s) {
    return toAjax(${className}Service.deleteWithValidByIds(List.of(${pkColumn.javaField}s), true));
  }
}
